// Call checkXpress/hold/release a beat early.
// Call earlyCheckApress 8 ticks early

checkA2:
    0xA1
    label 0xA2CE
    0xA2
    rest 2
    0xA2<2>
    if 1
        async_call failInput
        rest 0x60
    endif
goto 0xA2CE

checkNightWalk:
    label 0xA2CE
    rest 1
    0x105
    if 1
        async_call failInput
        stop
    endif
goto 0xA2CE

checkOnion:
    rest 0xC0
    rest 0xC0
    0x106 0
    if 0
        async_call failInput
    endif
    rest 0xC0
    rest 0xA7
    0x106 0
    if 0
        async_call failInput
    endif
stop

checkFreezeFrame:
    label 0xFFCE
    rest 0xC0
    rest 0x30
    0x104<2>
    if_neq 0
        async_call failInput
    endif
    rest 0xC0
    rest 0x60
    rest 0x48
    0x104<2>
    if_neq 0
        async_call failInput
    endif
goto 0xFFCE

checkCoinToss:
rest 0x30*15
0x102<1>
if 2
    async_call failInput
endif
stop

checkSickBeats:
label 0x51C3
0x108
if 1
    0x109 1
    async_call failInput
    rest 0x60
    0x106<4>
endif
rest 1
goto 0x51C3

failInput:
    0xB2 lives_enabled
    if 1
        0xB3 perf_miss, 1
        0xB4 lives, -1
        call life
        async_call waitAfterFail
        0xB2 lives
        0x40<1> 0x10002C2, 0x300
        if 0
            set_cat 0
            kill_loc playNextGame
            call gamekiller
        endif
    endif
stop

gamekiller:
    input 0
    0xB3 lives, 0
    0x57 0x30
    kill_loc playNextGame
    async_call substopper
    endif
    rest 0x30	// 4.0 beats
    speed 0x100
    play_sfx 0x10002B5
    rest 0x60
    call exit
return 

exit:
	input 0
	set_cat 0
	rest 0x6
	rest 0x6
	0x2D 0
	rest 0x18	// 1.0 beats
    0x65<4> 0x12C, 0x3C
    0x65<3> 0, -0x55
    0x65<5> 2
    0x65<7> 0
	play_sfx 0x1000AB7
    0x65<1> 2, "gate_gameoverT"
	rest 0xC0	// 4.0 beats
	rest 0xC0	// 4.0 beats
    0x65<2>
    fade 1,1,1
    // 0xB2 engine_loaded
    // if_neq 0x42
    //     call loadClapTrap
    //     rest 0x18
	//     engine 0x42
    // endif
    rest 0x18
    0xB2 score
    0x108<2>
	0x28<2> 
    kill_loc substopper
return 

substopper:
    set_cat 1
    label 0xBBBB
    kill_cat 0x7D0
    kill_cat 2
    rest 2
    goto 0xBBBB
stop

waitAfterFail:
set_cat 0
0xB3 perf_lock, 1
rest 0x60
0xB3 perf_lock, 0
stop

checkApress:
    set_cat 0
    0x201
    if_lt 0x103
        stop
    endif
    rest 0x28
    0xB2 perf_lock
    if_neq 1
        async_call waitApress
        0x200<2> 0
        if 1
            goto 0xAAAE
        endif
        label 0xAAAA
        set_condvar 0
        0x200<2> 0
        if 1
            kill_loc waitApress
            goto 0xAAAE
        endif
        rest 1
        goto 0xAAAA
        label 0xAAAE
    endif
stop

waitApress:
    set_cat 0
    rest 15
    async_call failInput
    kill_loc checkApress
stop

earlyCheckApress:
    set_cat 0
    0x201
    if_lt 0x103
        stop
    endif
    0xB2 perf_lock
    if_neq 1
        async_call earlyWaitApress
        0x200<2> 0
        if 1
            goto 0xAAAE
        endif
        label 0xAAAA
        set_condvar 0
        0x200<2> 0
        if 1
            kill_loc earlyWaitApress
            goto 0xAAAE
        endif
        rest 1
        goto 0xAAAA
        label 0xAAAE
    endif
stop

earlyWaitApress:
    set_cat 0
    rest 15
    async_call failInput
    kill_loc earlyCheckApress
stop

checkAhold:
    set_cat 0
    0x201
    if_lt 0x103
        stop
    endif
    rest 0x28
    0xB2 perf_lock
    if_neq 1
        async_call waitAhold
        0x200<2> 0
        if 1
            goto 0xAAAE
        endif
        label 0xAAAA
        set_condvar 0
        0x200<2> 0
        if 1
            kill_loc waitAhold
            goto 0xAAAB
        endif
        rest 1
        goto 0xAAAA
        label 0xAAAB
        set_condvar 0
        0x200<2> 0
        if 0
            async_call failInput
            stop
        endif
        rest 1
        goto 0xAAAB
        label 0xAAAE
    endif
stop

waitAhold:
    set_cat 0
    rest 15
    async_call failInput
    kill_loc checkAhold
stop

checkArelease:
    set_cat 0
    0x201
    if_lt 0x103
        stop
    endif
    rest 0x28
    0xB2 perf_lock
    if_neq 1
        kill_loc checkAhold
        async_call waitArelease
        0x200<2> 0
        if 0
            goto 0xAAAE
        endif
        label 0xAAAA
        set_condvar 0
        0x200<2> 0
        if 0
            kill_loc waitArelease
            goto 0xAAAE
        endif
        rest 1
        goto 0xAAAA
        label 0xAAAE
    endif
stop

waitArelease:
    set_cat 0
    rest 15
    async_call failInput
    kill_loc checkArelease
stop

checkBhold:
    set_cat 0
    0x201
    if_lt 0x103
        stop
    endif
    rest 0x28
    0xB2 perf_lock
    if_neq 1
        async_call waitBhold
        0x200<2> 1
        if 1
            goto 0xAAAE
        endif
        label 0xAAAA
        set_condvar 0
        0x200<2> 1
        if 1
            kill_loc waitBhold
            goto 0xAAAB
        endif
        rest 1
        goto 0xAAAA
        label 0xAAAB
        set_condvar 0
        0x200<2> 1
        if 0
            async_call failInput
            stop
        endif
        rest 1
        goto 0xAAAB
        label 0xAAAE
    endif
stop

waitBhold:
    set_cat 0
    rest 15
    async_call failInput
    kill_loc checkBhold
stop

checkBrelease:
    set_cat 0
    0x201
    if_lt 0x103
        stop
    endif
    rest 0x28
    0xB2 perf_lock
    if_neq 1
        kill_loc waitBhold
        async_call waitBrelease
        0x200<2> 1
        if 0
            goto 0xAAAE
        endif
        label 0xAAAA
        set_condvar 0
        0x200<2> 1
        if 0
            kill_loc waitBrelease
            goto 0xAAAE
        endif
        rest 1
        goto 0xAAAA
        label 0xAAAE
    endif
stop

waitBrelease:
    set_cat 0
    rest 15
    async_call failInput
    kill_loc checkBrelease
stop
