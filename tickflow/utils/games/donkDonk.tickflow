donkdonk_var = 12

donkdonk:
async_call donkdonkSFX, 0x30
async_call SFXswap, 0x28
0x100 0
async_call performance, 0x3C
rest 0x20	// 0.667 beats
async_call SFXswap, 0x28
0x100 0
async_call performance, 0x3C
rest 0x20	// 0.667 beats
rest 0x20	// 0.667 beats
stop

donkdonkSFX:
0x40<1> 0x10008B8, 0xF0
rest 0x20	// 0.667 beats
0x40<1> 0x10008B9, 0x118
rest 0x20	// 0.667 beats
rest 0x20	// 0.667 beats
stop

donkdwonk:
async_call donkdwonkSFX, 0x30
async_call SFXswap, 0x28
0x100 0
async_call performance, 0x3C
rest 0x20	// 0.667 beats
async_call SFXswap, 0x28
0x100 0
async_call performance, 0x3C
rest 0x20	// 0.667 beats
rest 0x20	// 0.667 beats
stop

donkdwonkSFX:
0x40<1> 0x10008BA, 0xD0
rest 0x20	// 0.667 beats
0x40<1> 0x10008BB, 0xD0
rest 0x20	// 0.667 beats
rest 0x20	// 0.667 beats
stop

deetdeetduh:
async_call deetdeetduhSFX, 0x30
async_call SFXswap, 0x28
0x100 1
rest 0x20	// 0.667 beats
async_call SFXswap, 0x28
0x100 1
rest 0x20	// 0.667 beats
async_call SFXswap, 0x28
0x100 1
rest 0x20	// 0.667 beats
stop

deetdeetduhSFX:
0x40<1> 0x10008B5, 0x118
rest 0x20	// 0.667 beats
0x40<1> 0x10008B6, 0x10C
rest 0x20	// 0.667 beats
0x40<1> 0x10008B7, 0x110
rest 0x20	// 0.667 beats
stop

deetdeetdoo:
async_call deetdeetdooSFX, 0x30
async_call SFXswap, 0x28
0x100 1
rest 0x20	// 0.667 beats
async_call SFXswap, 0x28
0x100 1
rest 0x20	// 0.667 beats
async_call SFXswap, 0x28
0x100 1
rest 0x20	// 0.667 beats
stop

deetdeetdooSFX:
0x40<1> 0x10008B2, 0x70
rest 0x20	// 0.667 beats
0x40<1> 0x10008B3, 0x88
rest 0x20	// 0.667 beats
0x40<1> 0x10008B4, 0x98
rest 0x20	// 0.667 beats
stop

bgloophill:
label 0x201
0x106 0x50A312, -1, 0xC0, 0x1E, 1, 0, 0x10, 0x80, -0x1C2, 0x10, 0x80
0x106 0x50A312, -1, 0xC0, 0x1E, 1, 0x174, 0x10, 0x80, -0x4E, 0x10, 0x80
0x106 0x50A312, -1, 0xC0, 0x1E, 1, 0x2E8, 0x10, 0x80, 0x126, 0x10, 0x80
rest 0xA0	// 4.0 beats
goto 0x201
stop

fgloop:
label 0x201
0x106 0x50A31B, -1, 0xC0, 0, 1, -0x10, 0x38, 0x80, -0x1D2, 0x38, 0x80
0x106 0x50A31B, -1, 0xC0, 0, 1, 0x164, 0x38, 0x80, -0x5E, 0x38, 0x80
rest 0xA0	// 4.0 beats
goto 0x201
stop

bgloop:
label 0x202
0x106 0x50A238, -1, 0x1200, 0x1E, 1, 0x200, -0x10, 0x80, -0x480, -0x10, 0x80
rest 0x800
goto 0x202
stop 


donksetup:
0x8B 0, 0
0x102<2> 1
0x104<1> 1
0x101<1> 2
rest 0xC	// 0.25 beats
0x106 0x50B173, -1, 0xC000, 0x20, 1, 0, -0x20, 0x80, -0x80, -0x20, 0x80
0x106 0x50A312, -1, 0xC000, 0x1F, 1, -0x60, 0x10, 0x80, -0x160, 0x10, 0x80
random 3
switch
	case 0
		0x106 0x50A238, -1, 0x1200, 0x1E, 1, 0x100, -0x10, 0x80, -0x600, -0x10, 0x80
	break
	case 1
		0x106 0x50A238, -1, 0x1200, 0x1E, 1, 0x180, -0x10, 0x80, -0x580, -0x10, 0x80
	break
	case 2
		0x106 0x50A238, -1, 0x1200, 0x1E, 1, 0, -0x10, 0x80, -0x700, -0x10, 0x80
	break
	case 3
		0x106 0x50A238, -1, 0x1200, 0x1E, 1, -0x100, -0x10, 0x80, -0x800, -0x10, 0x80
	break
endswitch

async_call fgloop
stop

blastoff:
async_call blastSFXswap, 0x28
async_call glitchprevent, 0x18
0x100 1
rest 0x2B	// <1.0 beats
0x109
if 1
	0xB2 donkdonk_var
	if 2
		goto 0x445
	endif
	input 0
	async_call blasteffect
	stop
endif
label 0x445
rest 0xD
0x109
if 3
	0x102<2> 0
	input 0
	play_sfx 0x10002B0
	0x103
else
	async_call blasteffect
endif
stop

blasteffect://I think that's what's at the end right?
// play_sfx 0x10008B1
0x102<2> 0
0x103<1>
input 0
0x102<2> 0
stop

//Not sure how useful this is, but it's here so here it stays

performance: 
0x109	// Performance checker, can check if the hit was: early (1), late (2), or completely missed (3). Used in Fever's Hole in One practice.
switch
	case 0
	break
	case 1
	break
	case 2
	break
	case 3
		0x102
	break
	default
	break
endswitch
stop

SFXswap:
play_sfx 0x1000295
rest 0x10	// 0.333 beats
play_sfx 0x1000296
stop

blastSFXswap:
play_sfx 0x1000297
0x6D 1
label 0x678
0x6D<1>
if_neq 1
	play_sfx 0x1000296
	input 0
	stop
endif
rest 1
goto 0x678
stop

glitchprevent:
0x109
switch
	case 0
		0xB3 donkdonk_var, 1
	break
	case 1
		0xB3 donkdonk_var, 2
	break
endswitch
stop
